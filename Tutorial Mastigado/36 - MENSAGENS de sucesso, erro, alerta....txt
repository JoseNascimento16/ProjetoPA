A ideia é bem simples, mostrar mensagens de status após determinadas ações.

- Na views de renderização do template, colocamos os codigo desejado:

	messages.debug(request, '%s SQL statements were executed.' % count)
	messages.info(request, 'Three credits remain in your account.')
	messages.success(request, 'Profile details updated.')
	messages.warning(request, 'Your account expires in three days.')
	messages.error(request, 'Document deleted.')

- No template:

	{% if messages %}
        <ul class="ul-mensagens">
            {% for message in messages %}
            <li{% if message.tags %} class="alert alert-{{ message.tags }} li-mensagens"{% endif %}>{{ message }}</li>
            {% endfor %}
        </ul>
    	{% endif %}

	- para ficar arrumadinho com as cores certas, tem que carregar o CDN do bootstrap
	- Criamos as classes ul-mensagens e li-mensagens pra formatar os paddings e margins

- No javascript, se quisermos que a mensagem desapareça após certo tempo:

	$(document).ready(function(){

	   setTimeout(function(){
           $('.li-mensagens').css("display","none");    
           }, 5000);

	})

	- Lembrar de carregar o .JS no base.html

###########################################################

Usamos o bootstrap para fornecer o css com as cores certinhas.
Porém as tags do sistema de mensagens do django não bate completamente com as tags usadas no bootstrap
A tag de "sucesso" funciona normalmente, porém a de 'error' não, porque o bootstrap usa 'danger' para erros
para fazer funcionar é simples: adicionamos a tag 'danger' do bootstrap para ser considerada no sistema de mensagens

- Em settings.py

	from django.contrib.messages import constants as messages

	MESSAGE_TAGS = {
    		messages.ERROR: 'danger',
	}

e basta usarmos o sistema normalmente