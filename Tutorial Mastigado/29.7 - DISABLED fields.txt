Desabilitar um campo em um formulário Django pode causar um erro de validação, caso o campo seja obrigatório.

No caso de estarmos usando um ModelForm, podemos fazer o seguinte:

	-em forms.py:

		class CodigosForm(forms.ModelForm):

    		class Meta:
        		model = ModeloCodigos
        	*	exclude = ['ordem']...
	
	-na views.py no momento da criação do objeto:

	def ordem(request, ordem_id):
		.
		.
		.
		instancia_ordem = get_object_or_404(Ordens, pk=ordem_id)		

		if request.method == 'POST':
        		form = CodigosForm(request.POST)
        		if form.is_valid():
            		**	instancia = form.save(commit=False)
            		***	instancia.ordem = instancia_ordem
            		****	instancia.save()

* Aqui estamos dizendo que o formulário terá todos os campos utilizados, menos o campo 'ordem' (dessa forma ele não entra na validação, mas também não é preenchido)
** Salvamos o formulário depois de preenchido pelo usuario, porém com commit=false, ou seja, ainda não salva no banco de dados
*** Definimos manualmente o valor do campo "ordem" deste formulario, preenchendo-o.
**** Agora sim, salvamos o formulario no banco de dados, com o campo ordem incluido manualmente a partir da views e não pelo requerimento POST

## Perceba que, ainda que isto seja um hardcoding, a instancia_ordem (que é o conteudo salvo no campo "ordem") é gerada
dinamicamente, pois o ID dela é passado no momento do carregamento da página quando o usuario escolhe qual ordem abrir, 
e já vem com o valor "ordem_id".

---------------------------------------------------------------------------------------------------------------------

Uma outra solução para o problema de campos desabilitados é o uso de Javascript para contornar a situação.

A técnica consiste em preencher o campo desabilitado com um valor "initial" e depois re-habilitar o campo no momento em que o
usuário clica no botão de submit. Desta forma o campo será validado normalmente, sem que o usuário consiga alterar o valor initial
dele.

$('#my_form').submit(function(){
    $("#my_form :disabled").removeAttr('disabled');
});

funciona, ja testei!! (lembrar de criar um "id" no form para isso)