USAR WIDGET TWEAKS

https://pypi.org/project/django-widget-tweaks/

https://www.youtube.com/watch?v=VYs-u0g__1A&ab_channel=PrettyPrinted

########

Vamos instalar o Django Widget Tweaks

    No Terminal

        pip install django-widget-tweaks

    Em setup > settings.py INSTALLED APPS

        'widget_tweaks',

    E precisamos indicar na nossa index que vamos utilizar o widget tweaks

    Em index.html

        (linha 3)

            {% load widget_tweaks %}

        (linha 10)

            Saimos de:

                {{field}}

            Para:

                {{field|add_class:'minha-classe'}}

    E ao recarregar perceba como o layout agora está padronizado

## No final do processo de estilização, a estrutura do nosso formulario ficou assim:


<div class="classe-form-modal"> 
        <form class="form-modal" action="#" method="POST"> 
        {% csrf_token %}

        {% for elemento in form_codigos.visible_fields %}
        <div class="linha-input linha-input-codigos">
            <label class="label-input label-input-codigos" for="{{ elemento.id_for_label }}">{{ elemento.label }}</label>
            {{elemento|add_class:'input-input'}}
        </div>

        {% for error in elemento.errors %}
        <section class="alert alert-danger" role="alert"> {{ elemento.errors }} </section>
        {% endfor %}

        {% endfor %}

            <div class="linha-submit">
                <input class="myButton" type="submit" value="Criar ação">
            </div>

        </form>
    </div>

# EXTRA:

{{item|add_class:'input-input'|attr:'rows:3'}}

- Mais de um filtro no elemento

{{item|attr:'hidden:true'}}

- renderiza o campo do formulario, mas o torna invisivel, ele ainda assim é enviado com um pre setado valor INITIAL junto com o POST.