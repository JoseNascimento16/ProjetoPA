Para inserir a funcionalidade de reset de password iremos utilizar as authentication classes, pois elas já possuem built-in functions (class based views) para este propósito, poupando o nosso trabalho.

https://www.youtube.com/watch?v=sFPcd6myZrY&ab_channel=DennisIvy
authentication views: https://docs.djangoproject.com/en/3.0/topics/auth/default/#all-authentication-views

na urls.py do app que quisermos:

from django.contrib.auth import views as auth_views

patterns = [

# CLASS BASED URLs
        # Página de reset password
    path('reset_password/', auth_views.PasswordResetView.as_view(template_name='reset_password.html'), name='reset_password'),
        # Página de mensagem de reset enviado
    path('reset_password_sent/', auth_views.PasswordResetDoneView.as_view(template_name='reset_password_sent.html'), name='password_reset_done'),
        # Link que o usuário irá receber para resetar a senha
    path('reset/<uidb64>/<token>/', auth_views.PasswordResetConfirmView.as_view(), name='password_reset_confirm'),
        # Página de mensagem de sucesso que a senha foi trocada
    path('reset_password_complete/', auth_views.PasswordResetCompleteView.as_view(), name='password_reset_complete'),

]

e é só isso!!!!

## Perceba que dentro dos parenteses do trecho ...as_view() nós podemos utilizar templates personalizados, foi o que fizemos no nosso projeto. No próximo tutorial falamos um pouco mais sobre esses templates.

### Para acessar a primeira página onde o usuario irá colocar o email dele, bastar chamarmos a url pelo atributo name:
	- 127.0.0.1:8000/reset_password
	- ou atravéz de um link
	- <a href="{% url 'reset_password' %}">Esqueci minha senha</a>