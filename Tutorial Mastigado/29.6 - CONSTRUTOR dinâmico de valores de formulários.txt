Objetivo: Ao renderizar a página, o formulário já vai ter 1 campo (ou varios) preenchido dinamicamente.

Imagine que o nosso Modelo tem a seguinte estrutura:

class ModeloCodigos(models.Model):
    ordem = models.ForeignKey(Ordens, on_delete=models.CASCADE)
    identificacao = models.CharField(max_length=1)

Ao fazermos todos os procedimentos e renderizarmos a pagina, esses 2 campos serão mostrados no formulário.
Mas não queremos isso, o campo "ordem" não pode ser editável (disabled), mas tem que ser preenchido com a "ordem" específica que estamos trabalhando.

Portanto teremos:

- Na views:

	def ordem(request, ordem_id):*

		instancia_ordem = get_object_or_404(Ordens, pk=ordem_id)**
		form = CodigosForm()***

	****	form.fields['ordem'].initial = instancia_ordem      <<<<<<<<<<<<<<<<<<<<<<
		form.fields['ordem'].disabled = True                <<<<<<<<<<<<<<<<<<<<<<
	        # form.fields['ordem'].required = False
	
		contexto{
			'form_codigos' : form,
		}

### O que está acontecendo aqui é: 

* Estamos numa views, que já está recebendo o id da "ordem" em que estamos trabalhando
** Usamos este id para criarmos uma instancia desta ordem
*** CodigosForm é nosso ModelForm usando o modelo ModeloCodigos
**** Neste trecho setamos o valor inicial do field 'ordem' dizendo que deverá utilizar a instancia_ordem
**** Este formato na verdade está setando um WIDGET no formulário, porém atravéz da views e não do forms.py!!!

Depois passamos o formulario para o contexto.


Ou seja, exemplo: ao entrarmos na "ordem 1", quando formos criar um novo codigo, ele já terá o campo "ordem" preenchido com a ordem 1, e assim sucessivamente

## SETAR ESTE CAMPO COMO DISABLED GERA UM ERRO DE VALIDAÇÃO DE FORMULARIO!!

## NOS PROXIMOS TUTORIAIS APRENDEMOS UMA TECNICA JQUERY PARA CONSEGUIR VALIDAR CAMPOS DISABLED.

