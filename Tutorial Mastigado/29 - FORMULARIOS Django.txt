Ao inves de trabalharmos com formularios HTML, vamos trabalhar com formularios Django.

No app que quisermos > new file > forms.py

Em forms.py

	from django import forms
	from djmoney.models.fields import MoneyField

	class CodigosForm(forms.Form):
    		identificacao = forms.CharField(label='Identificação', max_length=1, widget=forms.TextInput(attrs={'placeholder': 'Insira uma letra...','class': 'fonte-italic', , 'style': 'text-transform:uppercase;'}))
    		especificacao = forms.CharField(label='Especificação da ação negociável', widget=forms.Textarea(attrs={'placeholder': 'Especifique com o máximo de detalhamento possível...'}))
    		justificativa = forms.CharField(label='Justificativa para aquisição do item', widget=forms.Textarea(attrs={'placeholder': 'Justificativa...'}))
   		 # widget=forms.Textarea, 
    		TIPO = {('-------','-------'),('unidade','unidade'),('caixa','caixa')}
    		unidade = forms.ChoiceField(label='tipo de embalagem', choices=TIPO)
    		quantidade = forms.IntegerField(min_value='1', initial='Quantidade...')
    		valor_unitario = MoneyField(max_digits=14, decimal_places=2, default_currency='BRL')
    		valor_total_capital = MoneyField(max_digits=14, decimal_places=2, default_currency='BRL')
    		valor_total_custeio = MoneyField(max_digits=14, decimal_places=2, default_currency='BRL')

## Perceba que importamos também o "MoneyField" este é um modulo especifico para trabalhar com valores monetarios (Tutorial mais a frente)


Agora precisamos importar o nosso formulario para a views do app


Na views.py

	from codigos.forms import CodigosForm  (codigos é o nome do app)

	def funcao(request):
            form = CodigosForm()
            contexto = {'formulario':form}
            return render(request, 'index.html', contexto)

	ou seja, passamos o formulário como contexto podemos utilizar os seu valores no template.

Ex: Podemos pedir para que o template renderize todos os campos do formulário de uma vez só
	
	{{ form }}

Ex: Podemos especificar cada campo do formulário:

	{{ form.identificacao }}
	{{ form.especificacao }}
	{{ form.unidade }}
	{{ form.quantidade }}....

Para finalizar, o Django não renderiza a estrutura completa de um form HTML (somente os campos)
Portanto ainda precisamos colocar os campos do form numa estrutura mínima:

	<form class="form-modal" action="{#}" method="#"> 
            {% csrf_token %}

            {{ form }}

            <div class="linha-submit">
                <input class="myButton" type="submit" value="Botão">
            </div>
        </form>

